/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* current = head;      
        int length = 0;
        
        while(current) {
            length++;
            current = current->next;
        }
            
        bool isOdd = length % 2 == 1;
        
        current = head;
        ListNode* prev = nullptr, *toForward = nullptr;
        
        for(int i = 0, n = length / 2; i < n; i++) {
            toForward = current->next;
            current->next = prev;
            
            prev = current;
            current = toForward;
        }
        
        if(isOdd)
            current = current->next;
        
        while(current) {         
            if(current->val != prev->val)
                return false;
            current = current->next;
            prev = prev->next;
        }
        
        return true;
    }
};
